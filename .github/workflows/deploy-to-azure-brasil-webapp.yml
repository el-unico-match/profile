name: B&D to Brazil

on:
  push:
    branches: [ "dev"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log in to GitHub container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: hgmart
          password: ${{ secrets.HGMART_PAT }}

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Create Environment File
        run: |
          echo "DISABLE_DB=${{ vars.DISABLE_DB }}" > .env
          echo "LOG_FILENAME=${{ vars.LOG_FILENAME  }}" >> .env
          echo "NOTSET=${{ vars.NOTSET  }}" >> .env
          echo "DEBUG=${{ vars.DEBUG  }}" >> .env
          echo "INFO=${{ vars.INFO  }}" >> .env
          echo "ERROR=${{ vars.ERROR  }}" >> .env
          echo "CRITICAL=${{ vars.CRITICAL  }}" >> .env
          echo "LOGGING_LEVEL=${{ vars.LOGGING_LEVEL  }}" >> .env
          echo "DOCKER_DOMAIN =${{ vars.DOCKER_DOMAIN   }}" >> .env
          echo "LOCAL_DOMAIN=${{ vars.LOCAL_DOMAIN  }}" >> .env
          echo "DB_DOMAIN =${{ vars.DOCKER_DOMAIN   }}" >> .env  
          echo "DB_PORT=${{ vars.DB_PORT  }}" >> .env
          echo "DB_HOST=${{ secrets.DB_CNN  }}" >> .env         
          echo "LOCAL_DB_NAME=${{ vars.LOCAL_DB_NAME  }}" >> .env   
          echo "REMOTE_DB_NAME=${{ vars.REMOTE_DB_NAME  }}" >> .env           
          echo "DB_NAME=${{ vars.DB_NAME  }}" >> .env
          echo "apikey_value=${{ secrets.BR_APIKEY_VALUE  }}" >> .env            
          echo "apikey_activate_endpoint=${{ vars.BR_APIKEY_ACTIVATE_ENDPOINT  }}" >> .env
          echo "apikey_whitelist=${{ secrets.BR_APIKEY_WHITELIST }}" >> .env
          echo "isIngoingSecurityCheckEnabled=${{ vars.ISINGOINGSECURITYCHECKENABLED  }}" >> .env 
          echo "isOutgoingSecurityCheckEnabled=${{ vars.ISOUTGOINGSECURITYCHECKENABLED  }}" >> .env

      - name: Build and push container image to registry
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          push: true
          tags: ghcr.io/${{ env.REPO }}:${{github.actor}}_${{ github.run_attempt }}_${{ github.sha }}
          file: ./Dockerfile
          context: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.BR_AZURE_CONTAINERWEBAPP_SITE }}
          publish-profile: ${{ secrets.BR_AZURE_CONTAINERWEBAPP_PUBLISHPROFILE }}
          images: 'ghcr.io/${{ env.REPO }}:${{github.actor}}_${{ github.run_attempt }}_${{ github.sha }}'
